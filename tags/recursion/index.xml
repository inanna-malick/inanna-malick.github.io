<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recursion on Inanna Malick</title>
    <link>https://recursion.wtf/tags/recursion/</link>
    <description>Recent content in Recursion on Inanna Malick</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://recursion.wtf/tags/recursion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Recursion: a quick introduction</title>
      <link>https://recursion.wtf/posts/recursion_lib_intro/</link>
      <pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://recursion.wtf/posts/recursion_lib_intro/</guid>
      <description>&lt;p&gt;In traditional low level languages such as C iteration is implemented manually, with users writing out &lt;code class=&#34;code-inline language-c&#34;&gt; &lt;span style=&#34;color:#286983&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#286983&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;idx&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9d34&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;idx&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;items_len&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#d7827e&#34;&gt;idx&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;do_thing&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d7827e&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d7827e&#34;&gt;idx&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;}&lt;/span&gt; &#xA;&lt;/code&gt;, every time they want to iterate over a list. Newer languages like Rust provide abstractions - iterators - that separate the &lt;em&gt;machinery&lt;/em&gt; of recursion from the logic: &lt;code class=&#34;code-inline language-rust&#34;&gt;  &lt;span style=&#34;color:#286983&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#286983&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#d7827e&#34;&gt;iter&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d7827e&#34;&gt;do_thing&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d7827e&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#797593&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#797593&#34;&gt;}&lt;/span&gt;&lt;/code&gt; .&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://crates.io/crates/recursion&#34;&gt;recursion crate&lt;/a&gt; does the same thing for recursive data structures. This post is an introduction to the new version of the &lt;code&gt;recursion&lt;/code&gt; crate, but you don&amp;rsquo;t have to read &lt;a href=&#34;https://recursion.wtf/posts/rust_schemes/&#34;&gt;my&lt;/a&gt; &lt;a href=&#34;https://recursion.wtf/posts/rust_schemes_2/&#34;&gt;earlier&lt;/a&gt; &lt;a href=&#34;https://recursion.wtf/posts/rust_schemes_3/&#34;&gt;posts&lt;/a&gt; to understand it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
